{"version":3,"file":"src_app_reset-password_reset-password_module_ts.js","mappings":"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","sources":["./src/app/reset-password/reset-password-routing.module.ts","./src/app/reset-password/reset-password.module.ts","./src/app/reset-password/reset-password.page.ts","./src/app/services/alert.service.ts","./src/app/reset-password/reset-password.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\nimport { ResetPasswordPage } from './reset-password.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n\n  perfilData: any;\n  mostrarData = false;\n  changeForm: FormGroup;\n  valueBar = 0;\n  color = 'danger';\n\n  constructor(private navCtrl: NavController, private userService: UserService, private storage: Storage,\n    private alertService: AlertService) {\n      this.changeForm = this.createFormGroup();\n    }\n\n    get nombre() { return this.changeForm.get('nombre'); }\n    get usuario() { return this.changeForm.get('usuario'); }\n    get password() { return this.changeForm.get('password'); }\n    get confirmPassword() { return this.changeForm.get('confirmPassword'); }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.getData();\n  }\n\n  createFormGroup() {\n    return new FormGroup({\n      nombre: new FormControl({value: '', disabled: true} , [Validators.required]),\n      usuario: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  defaultValue( perfilData ){\n    this.changeForm.controls.nombre.setValue(perfilData.nombre);\n    this.changeForm.controls.usuario.setValue(perfilData.usu);\n  }\n\n\n  async getData() {\n\n    (await this.userService.getPassword()).subscribe((resp: any) =>{\n      this.perfilData = resp.data;\n      this.defaultValue( this.perfilData );\n      this.mostrarData = true;\n    });\n\n  }\n\n  back(){\n    this.navCtrl.back({animated: true});\n  }\n\n  clean(){\n    this.changeForm.controls.usuario.setValue('');\n    this.changeForm.controls.password.setValue('');\n    this.changeForm.controls.confirmPassword.setValue('');\n  }\n\n\n  async resetPassword(){\n    const datosUsuario = await this.storage.get('datos');\n    if ( datosUsuario ) {\n    await (await this.userService.setPassword(this.changeForm.value.usuario, this.changeForm.value.password)).\n      subscribe((resp: any) =>{\n        console.log(resp);\n        if(resp.status){\n          this.alertService.presentAlert('Contraseña y usuario actualizado!');\n          this.mostrarData = false;\n          this.changeForm.reset();\n          this.valueBar = 0;\n          this.getData();\n        }else{\n          this.alertService.presentAlert('Ha ocurrido un error, intenta más tarde');\n        }\n      });\n    }\n  }\n\n  seguridad_clave(clave){\n\t\tlet seguridad = 0;\n\t\tif(clave.length !== 0){\n\t\t\tif (this.tiene_numeros(clave) && this.tiene_letras(clave)){\n        seguridad += 30;\n\t\t\t}\n\t\t\tif (this.tiene_minusculas(clave) && this.tiene_mayusculas(clave)){\n        seguridad += 30;\n\t\t\t}\n\t\t\tif (clave.length >= 4 && clave.length <= 5){\n        seguridad += 10;\n\t\t\t}else{\n\t\t\t\tif (clave.length >= 6 && clave.length <= 8){\n          seguridad += 30;\n\t\t\t\t}else{\n\t\t\t\t\tif (clave.length > 8){\n            seguridad += 40;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    }\n    seguridad *= 0.01;\n      if(0.35 >= seguridad){\n        this.color = 'danger';\n      }else if(seguridad >= 0.36 && 0.80 >= seguridad){\n        this.color = 'warning';\n      }else{\n        this.color = 'success';\n      }\n    this.valueBar = seguridad;\n  }\n\n  tiene_numeros(texto){\n    const numeros='0123456789';\n    let i;\n    for(i=0; i<texto.length; i++){\n      if (numeros.indexOf(texto.charAt(i),0) !== -1){\n        return 1;\n        }\n      }\n    return 0;\n  }\n\ntiene_letras(texto){\n  const letras='abcdefghyjklmnñopqrstuvwxyz';\n  let i;\n  texto = texto.toLowerCase();\n  for(i=0; i<texto.length; i++){\n      if (letras.indexOf(texto.charAt(i),0) !== -1){\n        return 1;\n      }\n  }\n  return 0;\n}\n\ntiene_minusculas(texto){\n  const letras='abcdefghyjklmnñopqrstuvwxyz';\n  let i;\n  for(i=0; i<texto.length; i++){\n      if (letras.indexOf(texto.charAt(i),0) !== -1){\n        return 1;\n      }\n  }\n  return 0;\n}\n\ntiene_mayusculas(texto){\n  const letras_mayusculas='ABCDEFGHYJKLMNÑOPQRSTUVWXYZ';\n  let i;\n  for(i=0; i<texto.length; i++){\n      if (letras_mayusculas.indexOf(texto.charAt(i),0) !== -1){\n        return 1;\n      }\n  }\n  return 0;\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertCtrl: AlertController, public toastController: ToastController) { }\n\n  async presentAlert(message) {\n    const alert = await this.alertCtrl.create({\n      message,\n      mode: 'md',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async presentToast(message, color, duration) {\n    const toast = await this.toastController.create({\n      message,\n      duration,\n      color\n    });\n    toast.present();\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"back()\\\" color=\\\"light\\\">Atrás\\n        <ion-icon slot=\\\"start\\\" name=\\\"arrow-back-outline\\\" color=\\\"light\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Seguridad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"mostrarData\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n    <ion-card-header>\\n      <ion-card-title class=\\\"ion-text-center\\\">\\n        Usuario y contraseña\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n  <form (ngSubmit)=\\\"resetPassword()\\\" [formGroup]=\\\"changeForm\\\">\\n    <ion-list>\\n      <small>Nombre de Usuario:*</small>\\n      <ion-item mode=\\\"md\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n        <ion-input placeholder=\\\"User\\\" type=\\\"name\\\" formControlName=\\\"nombre\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div class=\\\"errors\\\" *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\">\\n        <span *ngIf=\\\"nombre.errors.required\\\">\\n          <ion-label class=\\\"error-container\\\">Este campo es requerido</ion-label>\\n        </span>\\n      </div>\\n      <small>Usuario:*</small>\\n      <ion-item mode=\\\"md\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"person-circle-outline\\\"></ion-icon>\\n        <ion-input placeholder=\\\"User\\\" type=\\\"name\\\" clearOnEdit=\\\"true\\\" clearInput formControlName=\\\"usuario\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div class=\\\"errors\\\" *ngIf=\\\"usuario.invalid && (usuario.dirty || usuario.touched)\\\">\\n        <span *ngIf=\\\"usuario.errors.required\\\">\\n          <ion-label class=\\\"error-container\\\">Este campo es requerido</ion-label>\\n        </span>\\n      </div>\\n      <small>Contraseña:*</small>\\n      <ion-item mode=\\\"md\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"lock-open\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"checkmark-circle-sharp\\\" *ngIf=\\\"password.value === confirmPassword.value && password.value !== '' && (confirmPassword.dirty || confirmPassword.touched)\\\" class=\\\"valid-icon\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"close-circle-sharp\\\" *ngIf=\\\"password.value !== confirmPassword.value && (confirmPassword.dirty || confirmPassword.touched)\\\" class=\\\"valid-icon-X\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" clearOnEdit=\\\"true\\\" formControlName=\\\"password\\\" (ngModelChange)=\\\"seguridad_clave(password.value)\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div class=\\\"errors\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n        <span *ngIf=\\\"password.errors.required\\\">\\n          <ion-label class=\\\"error-container\\\">Este campo es requerido</ion-label>\\n        </span>\\n      </div>\\n      <small>Confirmar Contraseña:*</small>\\n      <ion-item mode=\\\"md\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"lock-open\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"checkmark-circle-sharp\\\" *ngIf=\\\"password.value === confirmPassword.value && confirmPassword.value !== '' && (confirmPassword.dirty || confirmPassword.touched)\\\" class=\\\"valid-icon\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"close-circle-sharp\\\" *ngIf=\\\"password.value !== confirmPassword.value && (confirmPassword.dirty || confirmPassword.touched)\\\" class=\\\"valid-icon-X\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" clearOnEdit=\\\"true\\\" formControlName=\\\"confirmPassword\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div class=\\\"errors\\\" *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\">\\n        <span *ngIf=\\\"confirmPassword.errors.required\\\">\\n          <ion-label class=\\\"error-container\\\">Este campo es requerido</ion-label>\\n        </span>\\n      </div>\\n    </ion-list>\\n    <ion-list>\\n      <ion-progress-bar class=\\\"progress\\\" [value]=\\\"valueBar\\\" [color]=\\\"color\\\"></ion-progress-bar>\\n    </ion-list>\\n    <ion-grid>\\n      <br>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-button expand=\\\"block\\\" class=\\\"button-clean\\\" fill=\\\"outline\\\" color=\\\"dark\\\" (click)=\\\"clean()\\\"\\n            strong=\\\"true\\\">Limpiar\\n            <ion-icon slot=\\\"start\\\" color=\\\"black\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-button expand=\\\"block\\\" class=\\\"button-save\\\" type=\\\"submit\\\" [disabled]=\\\"!changeForm.valid || password.value !== confirmPassword.value\\\"\\n            strong=\\\"true\\\">Guardar\\n            <ion-icon slot=\\\"start\\\" color=\\\"white\\\" name=\\\"save\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-card-content>\\n</ion-card>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}