{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/Services/alert.service.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/app/login/login.page.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  constructor(public alertCtrl: AlertController, public toastController: ToastController) { }\r\n\r\n  async presentAlert(message) {\r\n    const alert = await this.alertCtrl.create({\r\n      message,\r\n      mode: 'md',\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async presentToast(message, color, duration) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration,\r\n      color\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\nimport { LoginPage } from './login.page';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { LoadingController, NavController, PopoverController} from '@ionic/angular';\r\nimport { UserService } from '../Services/user.service';\r\nimport { AlertService } from '../Services/alert.service';\r\n\r\nimport { Device } from '@awesome-cordova-plugins/device/ngx';\r\nimport {\r\n  ActionPerformed,\r\n  PushNotificationSchema,\r\n  PushNotifications,\r\n  Token,\r\n} from '@capacitor/push-notifications';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  sliderOpts = {\r\n    allowSlidePrev: false,\r\n    allowSlideNext: false\r\n  };\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private popoverCtrl: PopoverController, private navCtrl: NavController, private userService: UserService,\r\n              private alertService: AlertService, public loadingController: LoadingController, private device: Device) {\r\n                this.loginForm = this.createFormGroup();\r\n              }\r\n\r\n  get nombre() { return this.loginForm.get('nombre'); }\r\n  get password() { return this.loginForm.get('password'); }\r\n\r\n  ngOnInit() {}\r\n\r\n  createFormGroup() {\r\n    return new FormGroup({\r\n      nombre: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n\r\n  async login(){\r\n    this.presentLoading();\r\n      const valid = await this.userService.login(this.loginForm.value.nombre, this.loginForm.value.password);\r\n      if(valid){\r\n        PushNotifications.requestPermissions().then(async result => {\r\n          if (result.receive === 'granted') {\r\n            await this.registro();\r\n            PushNotifications.register();\r\n          } else {\r\n            // Show some error\r\n          }\r\n        });\r\n        await this.loadingController.dismiss();\r\n        this.navCtrl.navigateRoot('/', { animated: true});\r\n      }else{\r\n        this.loadingController.dismiss();\r\n        const message = 'Usuario y/o ContraseÃ±a son incorrectos';\r\n        this.alertService.presentToast(message, 'danger', 2500);\r\n        this.loginForm.reset();\r\n      }\r\n  }\r\n\r\n  async presentLoading() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Cargando...'\r\n    });\r\n    await loading.present();\r\n  }\r\n\r\n  registro(){\r\n    PushNotifications.addListener('registration', async (token: Token) => {\r\n      console.log(token);\r\n      (await this.userService.registro(this.device.uuid, token, this.device.platform)).subscribe(resp =>{\r\n        console.log(resp);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<ion-content>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n    </div>\\r\\n    <ion-card class=\\\"body animate__animated animate__bounceInDown\\\">\\r\\n      <div class=\\\"img\\\">\\r\\n        <img src=\\\"../../../assets/img/logo.png\\\" class=\\\"animate__animated animate__bounce\\\">\\r\\n      </div>\\r\\n      <form (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginForm\\\">\\r\\n        <ion-list>\\r\\n          <ion-item mode=\\\"md\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"person-circle-outline\\\"></ion-icon>\\r\\n            <ion-input placeholder=\\\"User\\\" type=\\\"name\\\" clearOnEdit=\\\"true\\\" clearInput formControlName=\\\"nombre\\\">\\r\\n            </ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"errors\\\" *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\">\\r\\n            <span *ngIf=\\\"nombre.errors.required\\\">\\r\\n              <ion-label class=\\\"error-container\\\">This field is required</ion-label>\\r\\n            </span>\\r\\n          </div>\\r\\n          <ion-item mode=\\\"md\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"lock-open\\\"></ion-icon>\\r\\n            <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" clearOnEdit=\\\"true\\\" clearInput formControlName=\\\"password\\\">\\r\\n            </ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"errors\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\r\\n            <span *ngIf=\\\"password.errors.required\\\">\\r\\n              <ion-label class=\\\"error-container\\\">This field is required</ion-label>\\r\\n            </span>\\r\\n          </div>\\r\\n        </ion-list>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button expand=\\\"block\\\" class=\\\"button-1\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login\\r\\n                <ion-icon slot=\\\"start\\\" color=\\\"white\\\" name=\\\"enter-outline\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </form>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}